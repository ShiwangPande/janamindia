// Prisma schema for Janam website CMS and donations
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  clerkUserId  String   @unique
  email        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  donations    Donation[]
}

model Donation {
  id             String   @id @default(cuid())
  amountInPaise  Int
  currency       String   @default("INR")
  isRecurring    Boolean  @default(false)
  status         DonationStatus @default(PENDING)
  upiVpa         String
  upiPayeeName   String
  donorName      String?
  donorEmail     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
}

enum DonationStatus {
  PENDING
  SUCCESS
  FAILED
  CANCELLED
}



model Testimonial {
  id        String   @id @default(cuid())
  name      String
  role      String?
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MediaFile {
  id        String   @id @default(cuid())
  name      String
  url       String
  type      String
  sizeBytes Int
  createdAt DateTime @default(now())
}

model Signup {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("signups")
}

enum RolePreference {
  WORKSHOP_FACILITATOR
  TRAINER
  FIELD_VOLUNTEER
  FUNDRAISER
}

enum Availability {
  WEEKDAYS
  WEEKENDS
  FLEXIBLE
}

model VolunteerApplication {
  id           String         @id @default(cuid())
  name         String
  email        String
  organization String?
  role         RolePreference
  availability Availability
  skills       String?
  message      String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("volunteer_applications")
}

model ContactSubmission {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(100)
  email       String   @db.VarChar(255)
  phone       String?  @db.VarChar(20)
  message     String   @db.Text
  submittedAt DateTime @default(now())
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contact_submissions")
}